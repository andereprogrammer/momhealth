# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"

  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    Dotenv.load ".env.beta"
    store_password = ENV['STORE_PASS']
    key_password = ENV['KEY_PASS']
    releaseFilePath = ENV['PLAYSTORE_KEYSTORE']
    increment_version_code(
                gradle_file_path: "app/build.gradle",
                #ext_constant_name: "test"
                #app_folder_name:"app"
          )
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "playstore",
        "android.injected.signing.key.password" => key_password,
      }
    )
    upload_to_play_store(
      track: 'internal'
    )
#     gradle(task: "clean assembleRelease")
#     crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end
  desc "Submit a new closed testing"
  lane :pre do
    Dotenv.load ".env.prod"
    store_password = ENV['STORE_PASS']
    key_password = ENV['KEY_PASS']
    releaseFilePath = ENV['PLAYSTORE_KEYSTORE']
    increment_version_code(
                gradle_file_path: "app/build.gradle",
                #ext_constant_name: "test"
                #app_folder_name:"app"
          )
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "playstore",
        "android.injected.signing.key.password" => key_password,
      }
    )
    upload_to_play_store(
      track: 'alpha'
    )
#     gradle(task: "clean assembleRelease")
#     crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end
  desc "Submit a new internal testing"
  lane :internal do
    Dotenv.load ".env.prod"
    store_password = ENV['STORE_PASS']
    key_password = ENV['KEY_PASS']
    releaseFilePath = ENV['PLAYSTORE_KEYSTORE']
    increment_version_code(
                gradle_file_path: "app/build.gradle",
                #ext_constant_name: "test"
                #app_folder_name:"app"
          )
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "playstore",
        "android.injected.signing.key.password" => key_password,
      }
    )
    upload_to_play_store(
      track: 'internal'
    )
#     gradle(task: "clean assembleRelease")
#     crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end